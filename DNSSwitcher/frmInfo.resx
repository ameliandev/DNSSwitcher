<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADQAAABQAAAAUAAAADQAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAARAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAAB4AAAAwAAAAPwAAAD8AAAAwAAAAHgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAARAAAABgAAAAAAAAAAAAAAEQAA
        ADIAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAARyt+vMMxi87/MYvO/yt+
        vMMAAABHAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAADIAAAARAAAAAAAA
        AAAAAAARUlBR/1JQUf9SUFH/UlBR/1JQUf9SUFH/UlBR/1JQUf9SUFH/UlBR/1NPT/9VSkT/OJXd/2Xk
        /P9l5Pz/OJXd/1VKRP9TT0//UlBR/1JQUf9SUFH/UlBR/1JQUf9SUFH/UlBR/1JQUf9SUFH/UlBR/wAA
        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
        AAP//D////5////+f////n////5////+f////n////5////+f////n//+D58H/g+fB+AAkABgAJAAYAC
        QAGAAkABgAAAAYAAAAGAA8ABgAPAAYADwAGAA8ABgAPAAf//////////KAAAABAAAAAgAAAAAQAgAAAA
        AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq5+cB////Af79/QH///8B////AQAAAAAAAAAAAAAAAAAA
        AAD///8B////Af79/QH///8B6ufnAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWKAAA
        FigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABLSwsEUxKSqhLSUm5S0lJtUtJSrZMSki1RkJHt0am
        1u9Gp9bvRkJHt0xKSLVLSUq2S0lJtUtJSblMSkqoLSwsEWFeXQp3dHKGeHVzkXd1co53dXOPenZyjm5p
        bo5huOTqYbjk6m5pb456dnKOd3Vzj3d1co54dXORd3RyhmFeXQoAAAAAAAAAAAAAAAAAAAAAAAAAAIJ5
        fAQAAAAAaGBinFJLTpwAAAAAY1tgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVycARwbWsFaGZkBWpn
        ZQV/e3gIAAAAAG9saJxYVlScAAAAAHBtawhqZ2UFaGZkBXBtawV1cnAEAAAAAAAAAAAAAAAAAAAAAP//
        /wHy8u0BgX57BAAAAABta2mcV1VVnAAAAABlYmIE8vLtAf///wEAAAAAAAAAAAAAAAAAAAAA///4Af//
        4gEAAAAAAAAAAK6spAUAAAAAbWtpnFdVVZwAAAAAmJaQBQAAAAAAAAAA///iAf//+AEAAAAAYFE+AgAA
        AABlVEA/h3ZfqntqVIImHxoLAAAAAGxpaJ5WVFSeAAAAABsTDwt7alSCh3ZfqmVUQD8AAAAAYFE+Am1c
        Skx8c2ickYqD0Luxp/+pn5b3f3p2r3tpVXBmZGOmUE9Qpn1sWHB+eXWvqZ+W97uxp/+QiYPQfHNpnG1c
        SUySg3OR0bWO/+zEgPrrxXr768Z+++bBhv+8pYjeaWZlp1BOTqe9p4ve5cCI/+rDe/vrxnv77cWA+tG0
        i/+Sg3SRl5GMj9aobf/vmyD5+bAu//SkIP7pmSn9uqaN8VpZWORTUVHkvKiP8eqdNv3zpyr++q8q//CW
        EfnVpWb/l5KNj52YkY/Uq3f/4pc2+umuWP7psGH967h3/7+vmvprZ2WNbmppjb6umPrgmkT/5aVL/eqx
        Xv7rsWP62ruT/5qRhY+loZqR27WH/9uNN/vkp1v/5apk/uq5gf/LvqnyNQ0ACToZDwnLvqny3ZlN/9+b
        S/7lq2L/56tn++HGov+hmYyRqZeEcsu/rPjMwa7rzMCu7cu/rezPxLHzvrCc1EQuIw1DLCANvrCe1M/E
        sPPLwK3szMCu7c3Br+vLv6z4qJaDcnxRTwJHGxMNSCkWDkYhEA5GIA4OQhgFD1EiGggAAAAAAAAAAFEg
        HQhGIhQPSCcTDkYfDw5FHwoORBYJDYFcWAL//wAA//8AAIABAACAAQAA/n8AAP5/AAD+fwAA/n8AAOZn
        AACCQQAAAAAAAAAAAAAAAAAAAYAAAIGBAAD//wAA
</value>
  </data>
</root>